*hairline.txt*	軽量・高機能なステータスライン・タブライン設定ツール
*hairline*

==============================================================================
使い方						*hairline-usage*

変数 |g:hairline| を設定する必要があります。|g:hairline.statusline| を定義すれ
ばステータスラインが有効になります。|g:hairline.tabline| を定義すればタブライ
ンが有効になります。 >
	let g:hairline = {}
	let g:hairline.statusline = {}
	let g:hairline.tabline = {}

|g:hairline.statusline.left| でステータスラインの左部のパーツを、
|g:hairline.statusline.right| でステータスラインの右部のパーツを指定します。 >
	let g:hairline.statusline.left = ["bufname", "filetype"]
	let g:hairline.statusline.right = ["persent"]

ここで指定されたパートは |g:hairline.part| から探され、置き換えられます。 >
  let g:hairline.part = {
	\ "bufname": "%t",
	\ "filetype": "%{&ft !=# '' ? &ft : 'no ft'}",
	\ "persent": "%3p%%",
	\ }
パート名に接頭辞 "f:" をつけるとそれは関数パートであると見なされます。関数パー
トは |g:hairline.part_func| から探され、その関数の戻り値に置き換えられます。 >
	" TODO

パート名に接頭辞 "r:" をつけると 'statusline' で使える式を直接記述できます。 >
	" TODO

パート名に接頭辞 "H:" をつけるとそれは専用ハイライト名と見なされ、そのハイライ
トが以後の文字列に適用されます。 >
	" TODO

パート名に接頭辞 "I:" をつけるとそのアイテムは無視されます。 >
	" TODO

|g:hairline.tabline.left| でタブラインの左部のパーツを、
|g:hairline.tabline.right| でタブラインの右部のパーツを指定します。 >
	" TODO


==============================================================================
インターフェイス

:HairLineReload					*:HairLineReload*
	|g:hairline| から設定を読み込み直し、ステータスラインとタブラインを再
	設定する。


g:hairline#default#statusline	(辞書)		*g:hairline#default#statusline*
	変数。辞書。ステータスライン用のデフォルト設定が用意されている。
	vimrc からでも読み込めるので必要に応じて適宜読み込むと良い。
	以下のキーを持つ。
	(TODO)


g:hairline#default#tabline	(辞書)		*g:hairline#default#tabline*
	変数。辞書。タブライン用のデフォルト設定が用意されている。
	vimrc からでも読み込めるので必要に応じて適宜読み込むと良い。
	以下のキーを持つ。
	(TODO)


==============================================================================
ユーザー定義変数

g:hairline			(辞書)		*g:hairline*
	既定: 未定義
	この変数を定義し設定しなければこのプラグインは動作しない。
	以降の属性を持つ。


g:hairline.part			(辞書)		*g:hairline.part*
	既定: {}
	辞書。キーにパート名、値に 'statusline' の設定で使用できる式の文字列を
	指定する。各ステータスライン・タブラインの "left" "right" で指定された
	パートの本体。


g:hairline.part_func		(辞書)		*g:hairline.part_func*
	既定: {}
	辞書。キーにパート名、値に関数参照、または関数名の文字列を指定する。
	この関数は引数を取らず、文字列を返す。
	各ステータスライン・タブラインの "left" "right" で "f:" 接頭辞付きで指
	定された関数パートの本体。


g:hairline.highlight()		(関数)		*g:hairline.highlight*
	既定: 未定義
	この関数内で |:highlight| コマンドを用いてハイライトを定義する。


g:hairline.common_hlnames	(文字列のリスト)*g:hairline.common_hlnames*
	既定: 未定義
	"COMMON" に定義されている、ハイライトのベース名{base-name}のリスト。こ
	こに名前があって、"COMMON" 以外の{context}に存在していない定義があるな
	ら、"COMMON" からハイライトがコピー（リンク）される。


g:hairline.statusline		(辞書)		*g:hairline.statusline*
	これを定義するとステータスライン機能が有効になる。


g:hairline.statusline.disable	(数値)		*g:hairline.statusline.disable*
	既定: 0
	非0 だとステータスライン機能を無効にする。


g:hairline.statusline.left	(リスト)	*g:hairline.statusline.left*
g:hairline.statusline.left_{context}
	文字列のリスト。ステータスラインの左側に置くパーツを指定する。
	"g:hairline.statusline.left_NC", "g:hairline.statusline.left_i" のよう
	に、アンダースコアに続けて{context}を続けた定義があるならその文脈にお
	いてはそちらの方が優先される。


g:hairline.statusline.right	(リスト)	*g:hairline.statusline.right*
g:hairline.statusline.right_{context}
	文字列のリスト。ステータスラインの右側に置くパーツを指定する。


g:hairline.tabline		(辞書)		*g:hairline.tabline*
	辞書。これを定義するとタブライン機能が有効になる。


g:hairline.tabline.disable	(数値)		*g:hairline.tabline.disable*
	既定: 0
	非0 だとタブライン機能を無効にする。

						*g:hairline.tabline.get_label*
g:hairline.tabline.get_label({is-current}, {tabnr})	(関数)
	関数、既定: 未定義
	文字列を返すことが期待される関数。戻り値の文字列はタブラインの各タブの
	ラベルとして評価される。|setting-tabline|
	- {is-current}: このタブページがカレントタブなら 1 そうでなければ 0 が
		与えられる。
	- {tabnr}: 評価中のタブページの番号。


g:hairline.tabline.left		(リスト)	*g:hairline.tabline.left*
g:hairline.tabline.right	(リスト)	*g:hairline.tabline.right*


==============================================================================
REMARKS

ハイライトの設定:~
|g:hairline.highlight| にハイライト関数を設定する。ハイライトグループ名は次の
規則によってつける: "HairLine_{context}_{base-name}" 。
例えば `"HairLine_NC_plain"` など。
{context}はそのステータスラインが属するウィンドウの状態であり、種類は以下であ
る:
	"COMMON"	全ての文脈で共通に使われるハイライト
	"NC"		非カレントウィンドウ
	"n"		カレントウィンドウのノーマルモード、以下以外のモード
	"v"		カレントウィンドウのビジュアルモード・セレクトモード
	"i"		カレントウィンドウのインサートモード
	"t"		カレントウィンドウのターミナルモード
	"TAB"		タブライン用


パーツ指定の表記方法
	{part-name}	part から{part-name}文字列を探して置き換える。
	f:{part-func-name}	関数名。part_func から探して評価する。
	r:{raw-expr}	直接{raw-expr}の文字を使う。
	H:{hl-name}	以後のハイライトを専用ハイライト{hl-name}に変更する。
	I:{...}		無視される(ignore)
	T:{type}	タブラインでのみ有効。タブページの総数を表示す
			る。{type}は数字で次のいずれかである:
			- 1:	"(4)" のようにタブページ総数だけを表示する
			- 2:	"(1/4)" のようにタブページ総数と現在タブページ
				番号を表示する
	L{|[frT]}:{...}	この要素の左にスペースを挿入しない
	R{|[frT]}:{...}	この要素の右にスペースを挿入しない
	S{|[frT]}:{...}	この要素の頭と末尾にスペースを挿入しない

	"L" "R" "S" の直後には "{part-name}"、"f:{part-func-name}"、
	"r:{raw-expr}"、"T:{tabpage-total}" を続けることができる。


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
